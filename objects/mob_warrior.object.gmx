<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_warrior</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_actor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ANK_idle=6
ANI_idle=0;
AND_idle=3;

ANK_run=2;
ANI_run=9
AND_run=8;

ANK_atk=1;
ANI_atk=17;
AND_atk=6;

ANK_jump=10;
ANI_jump=6;
AND_jump=3;

dim_z=32;
dim_x=24;
dim_y=24;

stat_maxhp=45;
hp=stat_maxhp;

t_atk=0;
ai_target=noone;
anim=0;

t_since_attack=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>do_jump=false;
do_block=false
do_atk=false

move_x=0;
move_y=0;

if ai_target==noone || not instance_exists(ai_target) {
    //pick new ai_target
    t=get_target_nearest()
    if (t!=noone)
        if (distance_to_object(t)&lt;300) {
            ai_target=t;
        }
}

if instance_exists(ai_target) &amp;&amp; ai_target!=noone {
    move_x=ai_target.x-x;
    move_y=ai_target.y-y;
    if (abs(move_x)&lt;80&amp;&amp;abs(move_y)&gt;3)
        move_y*=1.8;
    if (abs(move_x)&lt;60)
        move_x/=3;
    if (abs(move_x)&lt;40)
        move_x=0;
    var len = point_distance(0,0,move_x,move_y);
    if (len&gt;0) {
        move_x/=len;
        move_y/=len;
    }
    if (ai_target.z&gt;z &amp;&amp; random(1)&gt;0.95)
        do_jump=true;
    if (t_atk&gt;0) t_atk++;
    else if move_x!=0 dir=sign(move_x)
    if (len&lt;40) {
        if (t_atk==0)
            t_atk++;
        if (t_atk==5) {
            do_atk=true;
        }
        move_x=0;
        move_y=0;
    }
    if (t_atk&gt;16)
        t_atk=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//attack
if (t_since_attack&gt;=0)
    t_since_attack++;
if (do_atk) {
    wnd_spec[0]=dir
    wnd_spec[1]=5;
    t_since_attack=0;
    attack_rectangle(x+dir*30-30,y-20,z+1,x+dir*30+30,y+20,z+20,wnd_spec)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim++;
var anim_k=ANK_idle;
var anim_d=AND_idle;
var anim_i=ANI_idle;

if (phys_moved_dist&gt;0) {
    anim_k=ANK_run;
    anim_d=AND_run;
    anim_i=ANI_run;
}

if (!on_ground) {
    anim=min(t_since_jump,13);
    anim_k=ANK_jump;
    anim_d=AND_jump;
    anim_i=ANI_jump;
}

if (t_since_attack&gt;=00&amp;&amp;t_since_attack&lt;6) {
    anim=t_since_attack;
    anim_k=ANK_atk;
    anim_d=AND_atk;
    anim_i=ANI_atk;
}

image_index=(anim_i+floor(anim/anim_k)%anim_d)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
