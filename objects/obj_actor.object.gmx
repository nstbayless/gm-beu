<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_xyz</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir=1;
vspd=0;
z_rest=0;

stat_recharge_delay=290;
stat_recharge_rate=0;
stat_maxhp=20;
hp=stat_maxhp
//how blocking affects damage
stat_blk_mult=0;
stat_blk_sub=0;
//speed
stat_spd=4;
stat_blkspd=2;
stat_run=10;
//jumping
stat_grav=-3;
stat_jumpspd=20;
stat_jumpspd_blk=15;

move_x=0;
move_y=0
act_jump=false;
zhalt=false
do_run=false;
do_block=false;
is_blocking=false;

faction=0
bounce_sub=20;
bounce_max=60;
bounce_mult=0;

t_since_hit=-1;

dim_w=20;
dim_h=10;
dim_z=10;

c_hp_gone=make_color_hsv(15,132,156)
a_hp_gone=0.6;
c_hp_full=make_color_hsv(13,90,220)
a_hp_full=0.8;
spr_hp_ring_loc = spr_hp_ring_med

//player controlling this
player=-1;

shadow=noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z detection</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var grounds=get_grounds_in(x-10,y-5,x+10,y+5);
//highest ground encountered below z:
var maxz=-10000
var argmaxz=noone;
for (i=0;grounds[i]!=noone;i++) {
    if (grounds[i].z&lt;=z  &amp;&amp; grounds[i].z&gt;maxz) {
        maxz=grounds[i].z;
        argmaxz=grounds[i];
    }
}
ground_rest=argmaxz;
z_rest=maxz;
on_ground=(z==z_rest);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shadow</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(shadow)) {
    shadow = instance_create(x,y,obj_shadow)
    shadow.parent=id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics update</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//combat mechanics
if (hp&lt;=0&amp;&amp;t_since_hit&gt;3)
    instance_destroy();
else if (t_since_hit&gt;=stat_recharge_delay)
    heal(self,stat_recharge_rate);

is_blocking=do_block;

//report flags:
phys_bounced=false;
phys_jumped=false;

//z movement
if (act_jump&amp;&amp;on_ground) 
    if (!is_blocking) vspd=stat_jumpspd;
    else vspd=stat_jumpspd_blk;

if (!on_ground)
    vspd+=stat_grav;
    
if (zhalt&amp;&amp;vspd&gt;0)
    vspd=0;

z+= vspd;
if (z&lt;z_rest) {
    z=z_rest
    vspd*=-bounce_mult;
    vspd-=bounce_sub
    if (vspd&gt;bounce_max&amp;&amp;bounce_max&gt;0)
        vspd=bounce_max;
    if (vspd&lt;0)
        vspd=0;
}

//x-y movement
var xorig=x;
var yorig=y;
var xspd = stat_spd;
var yspd = stat_spd;
if (do_run) {xspd=stat_run;yspd/=2}
if (do_block) {xspd=stat_blkspd; yspd=stat_blkspd;}
xdiff = move_x*xspd;
ydiff = move_y*yspd;

var grounds_xn = get_grounds_in(xorig+xdiff-10,yorig-5,xorig+xdiff+10,yorig+5)
var grounds_yn = get_grounds_in(xorig-10,yorig+ydiff-5,xorig+10,yorig+ydiff+5)

for (var i=0;grounds_xn[i]!=noone;i++) {
    //collision!
    if (grounds_xn[i].z&gt;z&amp;&amp;grounds_xn[i].zbot&lt;z)
        xdiff=0;
}

for (var i=0;grounds_yn[i]!=noone;i++) {
    //collision!
    if (grounds_yn[i].z&gt;z&amp;&amp;grounds_yn[i].zbot&lt;z)
        ydiff=0;
}

x+=xdiff;
y+=ydiff;
moved_dist = point_distance(0,0,xdiff,ydiff);

//update facing:
if (!do_block) {
    if (move_x&lt;0)
        dir=-1;
    if (move_x&gt;0)
        dir=1;
}

//timers:
t_since_hit++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp&lt;stat_maxhp) {
    var cx=get_draw_x()
    var cy=get_draw_y()-dim_z/2;
    var ring_w = sprite_get_width(spr_hp_ring_loc);
    var ring_h = sprite_get_height(spr_hp_ring_loc);
    var ring_scale = 1;
    var alph_mult=1;
    if (t_since_hit&gt;400) {
        alph_mult=1-(t_since_hit-400)/100
        if (alph_mult&lt;0.2)
            alph_mult=0.2;
    }
    if (t_since_hit&gt;=0&amp;&amp;t_since_hit&lt;4){
        ring_scale=t_since_hit*0.2/4+0.8;
        ring_scale=sqrt(ring_scale)
    }
    draw_sprite_ext(spr_hp_ring_loc,0,cx-ring_w/2*ring_scale,cy-ring_h/2*ring_scale,ring_scale,ring_scale,0,c_hp_gone,a_hp_gone*alph_mult);
    var portion = hp/stat_maxhp;
    var part_b=1;
    if (portion&lt;0.5)
        part_b=0.5-cos(portion*pi*2)/2
    draw_sprite_part_ext(spr_hp_ring_loc,0,0.5*ring_w,0,0.5*ring_w,ring_h*part_b,cx,cy-ring_h/2*ring_scale,ring_scale,ring_scale,c_hp_full,a_hp_full*alph_mult);
    if portion&gt;0.5 {
        var part_a=0.5-cos(portion*pi*2)/2
        draw_sprite_part_ext(spr_hp_ring_loc,0,0,ring_h*(part_a),0.5*ring_w,ring_h*(1-part_a),cx-ring_w/2*ring_scale,cy-ring_h/2*ring_scale+ring_h*part_a*ring_scale,ring_scale,ring_scale,c_hp_full,a_hp_full*alph_mult);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=dir
draw_set_alpha(1);
if (t_since_hit&gt;=0&amp;&amp;t_since_hit&lt;6) {
    image_blend=c_red;
} else
    image_blend=c_white;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
