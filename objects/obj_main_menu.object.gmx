<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width=view_wview[0];
height=view_hview[0];

//0 - in menu
//1 - config submenu
//2 - room select submenu
mode=0;

opt_selected=3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode==0) {
    opt_n=4;
    opt_text[0]="Begin"
    opt_text[1]="Continue"
    opt_text[2]="Config"
    opt_text[3]="Jump To Room"
    
    opt_disabled[1]=true;
    opt_disabled[opt_n]=0;
    
    title_text = "";
}
if (mode==1) {
    opt_n=3;
    if (config.MUSIC_ENABLED)
        opt_text[0]="Music On"
    else
        opt_text[0]="Music Off"
    if (config.RUMBLE_ENABLED)
        opt_text[1]="Gamepad Rumble On"
    else
        opt_text[1]="Gamepad Rumble Off"
    if (config.RENDER_DEBUG_OVERLAY)
        opt_text[2]="Debug Overlay Enabled"
    else
        opt_text[2]="Debug Overlay Disabled"
        
    opt_disabled[1]=false;
    title_text = "Config Options";
}
FIRST_ROOM=rm_inf;
if (mode==2) {
    opt_n=0;
    while room_exists(FIRST_ROOM+opt_n) {
        opt_text[opt_n]=room_get_name(FIRST_ROOM+opt_n);
        opt_disabled[opt_n]=false;
        opt_n++;
    }
    title_text = "Select Room [Debug]";
}
select_val=false;
for (var i=0;i&lt;campaign.pc_count;i++) {
    if (controller.up_pressed[i])
        opt_selected--;
    if (controller.down_pressed[i])
        opt_selected++;
    if (controller.select_pressed[i])
        select_val=true;
    if (controller.cancel_pressed[i]) {
        if (mode!=0) {
            opt_selected=1+mode;
            mode=0;
            exit;
        }
    }
}

opt_selected=(opt_selected+opt_n) % opt_n;

if (mode==0 &amp;&amp; select_val) {
    switch (opt_selected) {
    case 0:
        room_goto(rm_c1_a)
        break
    case 2:
        mode=1;
        break;
    case 3:
        mode=2;
        break;
    default:
        break;
    }
    exit;
}
if (mode==1 &amp;&amp; select_val) {
    switch (opt_selected) {
        case 0:
            config.MUSIC_ENABLED=!config.MUSIC_ENABLED;
            break;
        case 1:
            config.RUMBLE_ENABLED=!config.RUMBLE_ENABLED;
            break;
        case 2:
            config.RENDER_DEBUG_OVERLAY=!config.RENDER_DEBUG_OVERLAY;
            show_debug_overlay(config.RENDER_DEBUG_OVERLAY);
        default:
            break;
    }
    exit;
}
if (mode==2 &amp;&amp; select_val) {
    room_goto(FIRST_ROOM+opt_selected);
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_reset();
draw_set_font(fnt_main_menu);
draw_set_halign(fa_center);

var entry_offset=128;
var entry_height=32;
var select_margin=64;

draw_set_colour(make_color_rgb(128,16,16));
draw_rectangle(select_margin,entry_offset+entry_height*opt_selected,width-select_margin,entry_offset+entry_height*opt_selected+entry_height,false)
for (var i=0;i&lt;opt_n;i++) {
    if (opt_disabled[i])
        draw_set_colour(c_gray);
    else
        draw_set_colour(c_white);
    draw_set_font(jukefont);
    draw_text(width/2,entry_offset+entry_height*i,opt_text[i]);
}

draw_set_colour(c_green);
draw_text(width/2,entry_offset/2,title_text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
