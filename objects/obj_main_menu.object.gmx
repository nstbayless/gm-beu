<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width=view_wview[0];
height=view_hview[0];

//0 - in menu
//1 - config submenu
//2 - room select submenu
mode=0;

opt_selected=3;
fademode=false;
fadetimer=0;
fadespd=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ANIM_TIME=15;
if (mode==0) {
    opt_n=4;
    opt_text[0]="Begin"
    opt_text[1]="Continue"
    opt_text[2]="Config"
    opt_text[3]="Jump To Room"
    
    opt_disabled[0]=!config.STORY_MODE_ENABLED;
    opt_disabled[1]=true;
    opt_disabled[opt_n]=0;
    subchoice=0;
    
    title_text = "";
}
if (mode==1) {
    opt_n=4;
    if (config.MUSIC_ENABLED)
        opt_text[0]="Music On"
    else
        opt_text[0]="Music Off"
    if (config.RUMBLE_ENABLED)
        opt_text[1]="Gamepad Rumble On"
    else
        opt_text[1]="Gamepad Rumble Off"
    if (config.RENDER_DEBUG_OVERLAY)
        opt_text[2]="Debug Overlay Enabled"
    else
        opt_text[2]="Debug Overlay Disabled"
    if (config.SFX_ENABLED)
        opt_text[3]="SFX Enabled"
    else
        opt_text[3]="SFX Disabled"
    
    opt_disabled[0]=false;
    opt_disabled[1]=false;
    title_text = "Config Options";
}
FIRST_ROOM=rm_inf;
if (mode==2) {
    opt_n=0;
    while room_exists(FIRST_ROOM+opt_n) {
        opt_text[opt_n]=room_get_name(FIRST_ROOM+opt_n);
        opt_disabled[opt_n]=false;
        opt_n++;
    }
    title_text = "Select Room [Debug]";
}
select_val=false;
for (var i=0;i&lt;campaign.pc_count;i++) {
    if (controller.up_pressed[i])
        opt_selected--;
    if (controller.down_pressed[i])
        opt_selected++;
    if (controller.left_pressed[i])
        subchoice--;
    if (controller.right_pressed[i])
        subchoice++;
    if (controller.select_pressed[i])
        select_val=true;
    if (controller.cancel_pressed[i]&amp;&amp;!fademode) {
        if (mode!=0) {
            opt_selected=1+mode;
            if (mode==3)
                opt_selected=0;
            mode=0;
            exit;
        }
    }
}

opt_selected=(opt_selected+opt_n) % opt_n;

if (mode==0 &amp;&amp; select_val) {
    switch (opt_selected) {
    case 0:
        if (config.STORY_MODE_ENABLED==false)
            exit;
        mode=3;
        t_begin_anim=0;
        submode=1;
        sub_t=0;
        dialogue_history[0]=opt_text[0];
        dialogue_x[0]=0;
        dialogue_history_n=1;
        subopt_n=0;
        branch=0;
        break
    case 2:
        mode=1;
        break;
    case 3:
        mode=2;
        opt_selected=0;
        break;
    default:
        break;
    }
    exit;
}
if (mode==1 &amp;&amp; select_val) {
    switch (opt_selected) {
        case 0:
            config.MUSIC_ENABLED=!config.MUSIC_ENABLED;
            break;
        case 1:
            config.RUMBLE_ENABLED=!config.RUMBLE_ENABLED;
            break;
        case 2:
            config.RENDER_DEBUG_OVERLAY=!config.RENDER_DEBUG_OVERLAY;
            show_debug_overlay(config.RENDER_DEBUG_OVERLAY);
        case 3:
            config.SFX_ENABLED=!config.SFX_ENABLED;
            play_sfx(sfx_attack);
            break
        default:
            break;
    }
    exit;
}
if (mode==2 &amp;&amp; select_val) {
    room_goto(FIRST_ROOM+opt_selected);
    instance_destroy();
    exit;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dialogue</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is really poorly-written code... will fix up in dialogue
//update some time (maybe)
if (mode==3) {
    PARLANT_X=158;
    if (t_begin_anim&lt;ANIM_TIME*submode&amp;&amp;!fademode)
        t_begin_anim++;
    if (t_begin_anim%ANIM_TIME==0) {
        if (submode==1) {
            if (sub_t==0) {
                dialogue_x[dialogue_history_n]=PARLANT_X;
                dialogue_history[dialogue_history_n++]=""
            }
            str_to_add = "Are you sure?"
            if (sub_t&lt;string_length(str_to_add))
                dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
            
            if (sub_t&gt;15) {
                submode++;
                branch=0;
                sub_t=0;
            }
        }
        
        if (submode==2){
            if (sub_t==4) {
                subopt_n=2;
                subopt=make_array("Yes","No")
                subchoice=0;
            }
            if (sub_t&gt;4) {
                subchoice=(subchoice+subopt_n)%subopt_n;
                if (select_val) switch(subchoice){
                case 0:
                    sub_t=0;
                    submode++;
                    dialogue_x[dialogue_history_n]=0;
                    dialogue_history[dialogue_history_n++]="Yes"
                    subopt_n=0;
                    exit;
                case 1:
                    mode=0;
                    exit;
                default:
                    break;
                }
            }
        }
        
        if (submode==3) {
            if (sub_t==0) {
                dialogue_x[dialogue_history_n]=PARLANT_X-40;
                dialogue_history[dialogue_history_n++]=""
            }
            str_to_add="Are you really sure?"
            if (sub_t&lt;=string_length(str_to_add))
                dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
            if (sub_t&gt;25) {
                submode++;
                sub_t=-1;
            }
        }
        
        if (submode==4){
            if (sub_t==4) {
                subopt_n=2;
                subopt=make_array("Yes","Definitely")
                subchoice=0;
            }
            if (sub_t&gt;4) {
                subchoice=(subchoice+subopt_n)%subopt_n;
                branch=1;
                if (select_val) switch(subchoice){
                case 0:
                    branch=2;
                case 1:
                    submode++;
                    sub_t=0;
                    dialogue_x[dialogue_history_n]=-subchoice*120;
                    dialogue_history[dialogue_history_n++]=subopt[subchoice]
                    subopt_n=0;
                    exit;
                default:
                    break;
                }
            }
        }
        if (branch==1) {
            if (submode==5) {
                if (sub_t==0) {
                    dialogue_x[dialogue_history_n]=PARLANT_X;
                    dialogue_history[dialogue_history_n++]=""
                }
                str_to_add="That's good"
                if (sub_t&lt;=string_length(str_to_add))
                    dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                if (sub_t&gt;15) {
                    submode++;
                    sub_t=-1;
                }
            }
            
            if (submode==6) {
                if (sub_t==0) {
                    dialogue_x[dialogue_history_n]=PARLANT_X+48;
                    dialogue_history[dialogue_history_n++]=""
                }
                str_to_add="Because..."
                if (sub_t&lt;=string_length(str_to_add)*4+3 &amp;&amp; sub_t%4==0)
                    dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,floor(sub_t/4)+1);
                if (sub_t&gt;60) {
                    submode++;
                    sub_t=-1;
                }
            }
            
            if (submode==7) {
                if (sub_t==0) {
                    dialogue_x[dialogue_history_n]=1;
                    dialogue_history[dialogue_history_n++]=""
                }
                str_to_add="You have a long way to go."
                if (sub_t&lt;=string_length(str_to_add)*2+1 &amp;&amp; sub_t%2==0)
                    dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,floor(sub_t/2)+1);
                if (sub_t&gt;90) {
                    submode=100;
                    room_goto(rm_c1_a)
                    fademode=true;
                    fadetimer=0;
                    sub_t=-1;
                    exit;
                }
            }
        } else {
            if (submode==5) {
                if (sub_t==0) {
                    dialogue_x[dialogue_history_n]=PARLANT_X+50;
                    dialogue_history[dialogue_history_n++]=""
                }
                str_to_add="Hmm..."
                if (sub_t&lt;=string_length(str_to_add))
                    dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                if (sub_t&gt;15) {
                    submode++;
                    sub_t=-1;
                }
            }
            
            if (submode==6 &amp;&amp; sub_t&gt;=0) {
                if (sub_t==0) {
                    dialogue_x[dialogue_history_n]=1;
                    dialogue_history[dialogue_history_n++]=""
                }
                str_to_add="You don't sound very sure."
                if (sub_t&lt;=string_length(str_to_add))
                    dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                if (sub_t&gt;30) {
                    submode++;
                    sub_t=-1;
                }
            }
            
            if (submode==7) {
                if (sub_t==4) {
                    subopt_n=2;
                    subopt=make_array("I am","I'm not")
                    subchoice=0;
                }
                if (sub_t&gt;4) {
                    subchoice=(subchoice+subopt_n)%subopt_n;
                    branch=3;
                    if (select_val) switch(subchoice){
                    case 0:
                        branch=4;
                    case 1:
                        submode++;
                        sub_t=0;
                        dialogue_x[dialogue_history_n]=-subchoice*120;
                        dialogue_history[dialogue_history_n++]=subopt[subchoice]
                        subopt_n=0;
                        exit;
                    default:
                        break;
                    }
                }
            }
            
            if (branch==3) {
                if (submode==8 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=PARLANT_X+50;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Good."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;30) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==9 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=PARLANT_X;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="You're honest."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;30) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==10 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=PARLANT_X-100;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="If you ever come back --"
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;40) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==11 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=1;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Let me know if it helps."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;60) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==12 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=1;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Just don't forget to come back."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;70) {
                        submode=100;
                        room_goto(rm_c1_a)
                        fademode=true;
                        fadetimer=0;
                        sub_t=-1;
                        exit;
                    }
                }
            } else {
                if (submode==8 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=PARLANT_X+50;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="I see."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;40) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==9 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=PARLANT_X+50;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Well..."
                    if (sub_t&lt;=string_length(str_to_add)*5 &amp;&amp; sub_t%5==3)
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,floor(sub_t/5)+1);
                    if (sub_t&gt;50) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==10 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=45;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="I hope you find it."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    else {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==11 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=70;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Whatever it is."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;45) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==12 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=12;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="You have a long journey ahead."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;50) {
                        submode++;
                        sub_t=-1;
                    }
                }
                if (submode==13 &amp;&amp; sub_t&gt;=0) {
                    if (sub_t==0) {
                        dialogue_x[dialogue_history_n]=1;
                        dialogue_history[dialogue_history_n++]=""
                    }
                    str_to_add="Try not to get into too much trouble."
                    if (sub_t&lt;=string_length(str_to_add))
                        dialogue_history[dialogue_history_n-1]+=string_char_at(str_to_add,sub_t+1);
                    if (sub_t&gt;50) {
                        submode=100;
                        room_goto(rm_c1_a)
                        fademode=true;
                        fadespd=3;
                        fadetimer=0;
                        sub_t=-1;
                        exit;
                    }
                }
            }
        }
        sub_t++
    }
    if (fademode==true)
        fadetimer++;
    if (fadetimer&gt;150)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_reset();
draw_set_font(fnt_menu);
draw_set_halign(fa_center);

var entry_offset=180;
var entry_height=36;
var dialogue_height=48;
var select_margin=64;

TOP_OFFSET=-19;

SEL_COL = make_color_rgb(128,16,16);

if (mode!=3) {
    draw_set_colour(SEL_COL);
    draw_rectangle(select_margin,entry_offset+entry_height*opt_selected-4,width-select_margin,entry_offset+entry_height*opt_selected+entry_height-4,false)
    for (var i=0;i&lt;opt_n;i++) {
        if (opt_disabled[i])
            draw_set_colour(c_gray);
        else
            draw_set_colour(c_white);
        draw_text(width/2,entry_offset+entry_height*i,opt_text[i]);
    }
    
    draw_set_colour(c_green);
    draw_text(width/2,entry_offset/2,title_text);
} else {
    draw_reset();
    if (fademode)
        draw_set_alpha(1-fadetimer/150)
    for (var i=0;i&lt;dialogue_history_n;i++) {
        var draw_y = entry_offset+i*dialogue_height - t_begin_anim/ANIM_TIME * dialogue_height+fadetimer*fademode*fadespd
        draw_set_color(c_white);
        tmp_offset=0;
        if dialogue_x[i]&lt;=0 {
            draw_set_halign(fa_center);
            draw_set_font(fnt_menu);
        } else {
            draw_set_halign(fa_left);
            draw_set_font(fnt_script);
            tmp_offset=TOP_OFFSET;
        }
        draw_text(width/2+abs(dialogue_x[i]),draw_y+tmp_offset,dialogue_history[i])
    }
    draw_set_font(fnt_menu);
    draw_set_halign(fa_center);
    for (var i=0;i&lt;subopt_n;i++) {
        var draw_y = entry_offset+fadetimer*fademode*fadespd;
        draw_x=width/2+120*i
        text_w=string_width(subopt[i]);
        if (subchoice==i) {
            draw_set_colour(SEL_COL)
            draw_rectangle(draw_x-text_w/2,draw_y,draw_x+text_w/2,draw_y+26,false)
            draw_set_color(c_white);
        }
        draw_text(draw_x,draw_y,subopt[i])
    }
}
draw_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
