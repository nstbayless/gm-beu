<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_full_width=0;
display_full_height=0;
application_surface_draw_enable(false);
t=0;
s_time = shader_get_uniform( shd_tv, "time");
s_bw = shader_get_uniform( shd_tv, "bw");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>prev_width = display_full_width
prev_height = display_full_height

display_full_width = window_get_width();
display_full_height = window_get_height();

screen_min_width=800;
screen_min_height=500;

scale_factor=min(floor(display_full_width/screen_min_width),floor(display_full_height/screen_min_height));
if (scale_factor==0)
    scale_factor=min((display_full_width/screen_min_width),(display_full_height/screen_min_height));

config.SCREEN_WIDTH=screen_min_width;
config.SCREEN_HEIGHT=screen_min_height;
config.GUI_WIDTH=display_full_width;
config.GUI_HEIGHT=display_full_height;

view_enabled=true;
view_visible[0]=true;
view_wview[0]=config.SCREEN_WIDTH;
view_hview[0]=config.SCREEN_HEIGHT;

if (prev_width!=display_full_width||prev_height!=display_full_height) {
    surface_resize(application_surface,config.SCREEN_WIDTH,config.SCREEN_HEIGHT);
    display_set_gui_maximise(1,1,0,0);
    application_surface_draw_enable(false);
}
t+=0.01
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_reset_target();

var draw_width = config.SCREEN_WIDTH*scale_factor;
var draw_height = config.SCREEN_HEIGHT*scale_factor;

var offx = (display_full_width-draw_width)/2
var offy = (display_full_height-draw_height)/2
shader_set(shd_tv);
shader_set_uniform_f(s_time, t);
shader_set_uniform_f(s_bw, 1);
draw_surface_stretched(application_surface,offx,offy,draw_width,draw_height);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(application_surface);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
