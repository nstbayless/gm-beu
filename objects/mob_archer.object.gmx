<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_warrior_alt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_actor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>AN_idle = make_animation(0,1,1);
AN_walk = make_animation(0,3,2);
AN_jump = make_animation(3,3,3);
AN_shoot = make_animation(6,3,2);
AN_atk = make_animation(9,3,3);

stat_maxhp=40;
hp=stat_maxhp;

anim_t=0;
anim_walk_t=0;
ai_target=noone
t_since_shot=-1;
t_since_atk=-1;

stat_spd=3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>halt_execute_actor()</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>do_jump=false;
do_block=false
do_atk=false
do_shoot=false;
do_dir=0;

move_x=0;
move_y=0;

if ai_target==noone || not instance_exists(ai_target) {
    //pick new ai_target
    t=get_target_nearest()
    if (t!=noone)
        if (distance_to_object(t)&lt;300) {
            ai_target=t;
        }
}

if instance_exists(ai_target) {
    move_y=sign(ai_target.y-y)*(abs(ai_target.y-y)&gt;5)
    do_dir=sign(ai_target.x-x)
    
    if (move_y==0)
        do_shoot=true;
    var dist_x = abs(ai_target.x-x);
    var dist_y= abs(ai_target.y-y);
    if (dist_x&lt;=50) {
        do_shoot=false;
        move_x=(dist_x&gt;10)*do_dir/5;
        do_atk=true;
    }
    if (dist_x&lt;100&amp;&amp;(dist_x&gt;50||dist_y&gt;50)) {
        do_shoot=false;
        do_dir*=-1;
        move_x=do_dir;
        move_y/=2;
        }
    if (dist_x&gt;400)
        move_x=do_dir/2;
    
} else ai_target=noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (t_since_shot&gt;=0)
    t_since_shot++;
    
if (t_since_atk&gt;=0)
    t_since_atk++;

if (can_act()&amp;&amp;do_shoot&amp;&amp;(t_since_shot&gt;14||t_since_shot==-1)) {
    t_since_shot=0;
    var bullet = instance_create_xyz(x,y,z+16,obj_bullet);
    bullet.dir=dir;
    bullet.faction=faction;
    bullet.knockback=10;
    bullet.master=this;
    bullet.damage=4;
    sfx_to_play = sfx_twang1;
    if (random(1)&gt;0.73)
        sfx_to_play=sfx_twang2;
    play_sfx_at(x,y,z+dim_z/2,sfx_to_play)
}

if (can_act()&amp;&amp;do_atk&amp;&amp;(t_since_atk&gt;9||t_since_atk==-1)) {
    wnd_spec[0]=dir;
    wnd_spec[1]=1.5;
    attack_rectangle(x+16*dir-16,y-12,z+16,x+16*dir+16,y+12,z+8,wnd_spec)
    play_sfx_at(x,y,z+dim_z/2,sfx_attack) 
    t_since_atk=0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim=AN_idle;

anim_t++;
var _anim_t=anim_t;

if (phys_moved_dist&gt;0) {
    anim_walk_t+=phys_moved_dist/5;
    _anim_t=anim_walk_t;
    anim=AN_walk;   
}

if (t_since_atk&gt;=0&amp;&amp;t_since_atk&lt;6) {
    anim=AN_atk;
    _anim_t=t_since_atk;
}

an_i=anim[0];
an_d=anim[1];
an_k=anim[2];

if (an_d&gt;1)
    image_index=an_i+floor(_anim_t/an_k)%an_d
else
    image_index=an_i
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
