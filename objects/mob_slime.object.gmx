<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_actor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ANI_idle=0;
AND_idle=2;
ANK_idle=11;

ANI_jump=2;
AND_jump=7;
ANK_jump=3;

ANI_slide=9;
AND_slide=12;
ANK_slide=4;

anim=0;

bounce_mult=0.6;
bounce_sub=4;

ai_target=noone;
slide_timer=0;
slide_x=0;
slide_y=0;

chance_jump=0.15;
t_since_jump=-1;
stat_jumpspd=16;

wnd_spec[1]=2;
spr_hp_ring_loc = spr_hp_ring_small
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>act_jump=false;

if ai_target==noone || not instance_exists(ai_target) {
    //pick new ai_target
    t=get_target_nearest()
    if (t!=noone)
        if (distance_to_object(t)&lt;300) {
            ai_target=t;
        }
}

if (slide_timer&gt;0)
   slide_timer--;
if slide_timer&lt;10
    do_atk=false;
if (t_since_jump&gt;=0)
    t_since_jump++;

if instance_exists(ai_target) &amp;&amp; ai_target!=noone {
    if (slide_timer==0) {
        do_atk=true;
        slide_timer=40;
        slide_x=ai_target.x-x;
        slide_y=ai_target.y-y;
        var len = point_distance(0,0,slide_x,slide_y);
        if (len&gt;0) {
            slide_x/=len;
            slide_y/=len;
        }
        if (random(1)&lt;chance_jump) {
            act_jump=true;
            t_since_jump=0;
            slide_x*=1.3;
            slide_y*=1.3;
        }
    }
}

move_x=2*slide_x*slide_timer/40;
move_y=2*slide_y*slide_timer/40;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if do_atk {
    wnd_spec[0]=0;
    if abs(slide_x)&gt;0.2
        wnd_spec[0]=sign(slide_x)
    if attack_rectangle(x-6,y-4,z,x+6,y+4,z+4,wnd_spec)!=noone
        do_atk=false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim++;
var anim_k=ANK_idle;
var anim_d=AND_idle;
var anim_i=ANI_idle;

if (moved_dist&gt;0) {
    anim_k=ANK_slide;
    anim_d=AND_slide;
    anim_i=ANI_slide;
}

image_index=(anim_i+floor(anim/anim_k)%AND_idle)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
