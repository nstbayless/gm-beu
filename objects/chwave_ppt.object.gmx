<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode=0; //TODO: this is temporary. Reset to mode=0.
wave=0;

wave_mob_max=0;
wave_mob_n=0;

show_gui=false;

total_waves=5;
wave_started=false;
wave_start_timer=0;
wave_active=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>halt_execute()</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mode==0) {
    with obj_actor {
        if is_pc() {
            if (x &gt; 495) {
                with other mode=1;
            }
        }
    }

}

if (mode==1) {
    if (dialogue_lock()) {
        mode=2;
        dummy_pcs();
        dialogue_enqueue(make_line("",prt_hooded,"You wish to begin?"))
        opt_choice = make_line("",prt_pc_main,"");
        opt_choice.option_n=2;
        opt_choice.option_v=make_array("Begin","Go back")
        dialogue_enqueue(opt_choice);
    }
}

if (mode==2) {
    if (dialogue_wait_for(opt_choice)) {
        if (dialogue_get_result()==1) {
            dialogue_unlock();
            undummy_pcs();
            mode=0;
             with obj_actor {
                if is_pc() {
                    if (x &gt; 495) {
                        x=492;
                        dir=-1;
                    }
                }
            }
        }
        if (dialogue_get_result()==0) {
            mode=3;
            dialogue_enqueue(make_line("",prt_hooded,"So it begins..."))
        }
    }
}

if (mode==3) {
    if (dialogue_wait()) {
        dialogue_unlock();
        undummy_pcs();
        mode=4;
        mob_hood.do_alpha=true;
    }
}

if (mode==4&amp;&amp;!instance_exists(mob_hood)) {
    mode=5;
}

if (mode==5) {
    show_gui=true;
    if (wave==0)
        wave=1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>wave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wave_active=false;
wave_mod = ((wave-1) % total_waves) +1

if (!wave_started) {
    wave_started=true;
    wave_timer=0;
    wave_mob_spawned=0;
    wave_start_timer=5.5*30;
    if (wave&gt;30) //TODO: proper "win"
        open_menu();
} 
if wave_start_timer&lt;=0
    wave_active=true;
else {
    wave_start_timer--;
    if (wave_start_timer==0) {
        wave_active=true;
        wave_mob_max=scr_chwave_get_mobcount(wave);
        wave_mob_n=wave_mob_max;
    }
}

if (wave_active) {
    script_execute(scr_chwave_get_ontick(wave_mod));
    
    if (wave_mob_n==0&amp;&amp;wave_mob_max&gt;0)
        scr_chwave_end();
    wave_timer++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!show_gui)
    exit;
var width = config.GUI_WIDTH;
var height = config.GUI_HEIGHT;

draw_set_alpha(1);
if (wave_active)
    draw_set_colour(make_colour_rgb(40,100,255));
else
    draw_set_colour(c_ltgray);
draw_set_font(jukefont);

var d_rect_width=170;
var d_rect_lmarg = 20;
var d_rect_ymarg = 46;
var d_height = 20;
var d_margin = 3;
draw_text(width-d_rect_lmarg-d_rect_width,24,"Wave " + string(wave));
draw_rectangle(width-d_rect_width-d_rect_lmarg,d_rect_ymarg,width-d_rect_lmarg,d_rect_ymarg+d_height,true);
var p = 0;
if (wave_mob_max&gt;0)
    p=wave_mob_n/wave_mob_max;
draw_rectangle(width-d_rect_width-d_rect_lmarg+d_margin,d_rect_ymarg+d_margin,width-(d_rect_width-d_margin*2)*(1-p)-d_rect_lmarg-d_margin,d_rect_ymarg+d_height-d_margin,false);

if (wave_started&amp;&amp;!wave_active&amp;&amp;wave_start_timer&lt;=5*30) {
    var color = c_aqua;
    if (wave_start_timer&lt;4)
        color=c_white;
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle);
    draw_set_font(fnt_script)
    var t = (5*30-wave_start_timer)
    var scale=1;
    var alph=1;
    if (t&lt;6) {
        scale=sqrt(sqrt(t/5.7));
        alph=t/6;
    }
    
    draw_wheel(width/2,height/2,spr_hp_ring_med,0,1,scale,color,0.2*alph)
    draw_wheel(width/2,height/2,spr_hp_ring_med,wave_start_timer/5/30,1,scale,color,0.8*alph)
    draw_set_colour(c_yellow);
    draw_set_alpha(1);
    if (color==c_white)
        draw_set_color(color);
    var off_y=0;

    if (t&lt;10)
        off_y=floor((10-t)*(10-t)*-3.5)
    draw_text(width/2,height/2+off_y,"Get Ready!")
    
    draw_reset_full();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
